[gd_scene load_steps=12 format=2]

[ext_resource path="res://RobotEyes.shader" type="Shader" id=2]

[sub_resource type="GDScript" id=1]
script/source = "tool
extends Spatial

export (float) var max_eye_distance = 0.1;

const left_eye_center = Vector2(-0.25, 0.0);
const right_eye_center = Vector2(0.25, 0.0);

const anims = [
	\"blink_to_neutral\",
	\"blink_to_squint\",
	\"blink_to_left_squint\",
	\"blink_to_right_squint\"
];

var mat : ShaderMaterial;

var current_id = 0;

var blink_counter = 0.0;

func _blink():
	blink_counter = rand_range(3.7, 6.5);
	_item_selected(current_id);

func _item_selected(id: int):
	current_id = id;
	var anim = $AnimationPlayer.get_animation(anims[id]);
	if anim:
		anim.track_set_key_value(0, 0, mat.get_shader_param(\"eyelid1\"));
		anim.track_set_key_value(1, 0, mat.get_shader_param(\"eyelid2\"));
		$AnimationPlayer.stop(true);
		$AnimationPlayer.play(anims[id]);

func _ready():
	$VBoxContainer/OptionButton.connect(\"item_selected\", self, \"_item_selected\");
	#$Panel/VBoxContainer/Button.connect(\"pressed\", self, \"_blink\");
	mat = $MeshInstance.get_surface_material(0);
	blink_counter = rand_range(3.7, 6.5);

func _process(delta):
	blink_counter -= delta;
	if blink_counter < 0:
		_blink();

func _input(event):
	if event is InputEventMouse:
		var mouse_pos = get_viewport().get_camera().project_position(event.position, 0.0);
		mouse_pos = Vector2(mouse_pos.x, mouse_pos.y);
		var mouse_pos_in_shader = Vector2(0.5,0.5) + Vector2(mouse_pos.x, -mouse_pos.y);
		# Left eye
		if mouse_pos.distance_to(left_eye_center) < max_eye_distance:
			mat.set_shader_param(\"eye1\", mouse_pos_in_shader);
		else:
			mat.set_shader_param(\"eye1\", Vector2(0.25, 0.5) + ((mouse_pos_in_shader - Vector2(0.25, 0.5)).normalized() * max_eye_distance));
		
		# Right eye
		if mouse_pos.distance_to(right_eye_center) < max_eye_distance:
			mat.set_shader_param(\"eye2\", mouse_pos_in_shader);
		else:
			mat.set_shader_param(\"eye2\", Vector2(0.75, 0.5) + ((mouse_pos_in_shader - Vector2(0.75, 0.5)).normalized() * max_eye_distance));

func _unhandled_input(event):
	if event is InputEventMouseButton and event.button_index == BUTTON_LEFT and event.pressed:
		_blink();
"

[sub_resource type="QuadMesh" id=2]

[sub_resource type="ShaderMaterial" id=3]
shader = ExtResource( 2 )
shader_param/pixel_size = 0.01
shader_param/eye1 = Vector2( 0.25, 0.5 )
shader_param/eyelid1 = 0.9
shader_param/eye2 = Vector2( 0.75, 0.5 )
shader_param/eyelid2 = 0.9
shader_param/eye_color = Color( 0, 0.6, 1, 1 )
shader_param/eye_width = 0.15
shader_param/eye_pow = 10.0
shader_param/face_height = 0.25

[sub_resource type="ProceduralSky" id=4]

[sub_resource type="Environment" id=5]
background_sky = SubResource( 4 )
glow_enabled = true
glow_bicubic_upscale = true

[sub_resource type="Animation" id=6]
resource_name = "blink_to_left_squint"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("MeshInstance:material/0:shader_param/eyelid1")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.9, 0.0, 0.65 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("MeshInstance:material/0:shader_param/eyelid2")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.9, 0.0, 0.9 ]
}

[sub_resource type="Animation" id=7]
resource_name = "blink_to_neutral"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("MeshInstance:material/0:shader_param/eyelid1")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.9, 0.0, 0.9 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("MeshInstance:material/0:shader_param/eyelid2")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.9, 0.0, 0.9 ]
}

[sub_resource type="Animation" id=8]
resource_name = "blink_to_right_squint"
length = 0.4
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("MeshInstance:material/0:shader_param/eyelid1")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.9, 0.0, 0.9 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("MeshInstance:material/0:shader_param/eyelid2")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.9, 0.0, 0.65 ]
}

[sub_resource type="Animation" id=9]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("MeshInstance:material/0:shader_param/eyelid1")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.9, 0.0, 0.65 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("MeshInstance:material/0:shader_param/eyelid2")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.9, 0.0, 0.65 ]
}

[sub_resource type="BoxShape" id=10]
extents = Vector3( 19.0335, 11.8256, 0.0681053 )

[node name="RobotEyes" type="Spatial"]
script = SubResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 5 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
playback_speed = 1.3
anims/blink_to_left_squint = SubResource( 6 )
anims/blink_to_neutral = SubResource( 7 )
anims/blink_to_right_squint = SubResource( 8 )
anims/blink_to_squint = SubResource( 9 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1.02289 )
projection = 1

[node name="Area" type="Area" parent="."]
input_capture_on_drag = true

[node name="CollisionShape" type="CollisionShape" parent="Area"]
shape = SubResource( 10 )

[node name="VBoxContainer" type="VBoxContainer" parent="."]
margin_left = 62.0
margin_top = 60.0
margin_right = 249.0
margin_bottom = 101.0
__meta__ = {
"_edit_group_": true,
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="VBoxContainer"]
margin_right = 187.0
margin_bottom = 14.0
text = "Emote"

[node name="OptionButton" type="OptionButton" parent="VBoxContainer"]
margin_top = 18.0
margin_right = 187.0
margin_bottom = 38.0
text = "Neutral"
items = [ "Neutral", null, false, 0, null, "Squint", null, false, 1, null, "Left Squint", null, false, 2, null, "Right Squint", null, false, 3, null ]
selected = 0
